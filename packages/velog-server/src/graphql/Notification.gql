type Notification {
  id: ID!
  type: NotificationType!
  message: String!
  fk_user_id: String!
  action: NotificationAction!
  action_id: ID!
  is_read: Boolean!
  is_deleted: Boolean!
  created_at: Date!
}

enum NotificationType {
  follower
  comment
  postLike
}

union NotificationAction =
    FollowerNotificationAction
  | CommentNotificationAction
  | PostLikeNotificationAction

type PostLikeNotificationAction {
  type: NotificationType!
  id: ID!
  title: String!
  display_name: String!
  fk_user_id: String!
  url_slug: String!
  created_at: Date!
}

type FollowerNotificationAction {
  type: NotificationType!
  id: ID!
  display_name: String!
  fk_user_id: String!
  created_at: Date!
}

type CommentNotificationAction {
  type: NotificationType!
  id: ID!
  fk_user_id: String!
  post_id: ID!
  post_title: String!
  text: String!
  created_at: Date!
}

type Query {
  notifications: [Notification!]!
  notificationCount: Int!
}

type Mutation {
  readNotification(input: ReadNotificationInput!): Void
}

input ReadNotificationInput {
  notification_ids: [String!]!
}
